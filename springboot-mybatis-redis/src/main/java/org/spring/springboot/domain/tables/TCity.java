package org.spring.springboot.domain.tables;
import com.welab.xdao.context.table.AllField;
import com.welab.xdao.context.table.AbstractTable;
import com.welab.xdao.context.element.ITableField;
import com.welab.xdao.context.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;

public class TCity extends AbstractTable {

	static {
		init();
	}

	private TCity(){
		super.tableName = "city";
	}

	private TCity(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TCity getInstance() {
		return new TCity();
	}

	public static final TCity getInstance(String aliasName) {
		return new TCity(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("provinceId", "province_id");
		allFieldMap.put("cityName", "city_name");
		allFieldMap.put("description", "description");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final ITableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public ITableField<?> allField() {
		return all;
	}

	/**
	 * 城市编号 | int(10) unsigned
	 */
	public final ITableField<Integer>  pk = new TableFieldImpl<Integer>(this,"id","id","城市编号");
	public final ITableField<Integer> id = new TableFieldImpl<Integer>(this,"id","id","城市编号");

	/**
	 * 省份编号 | int(10) unsigned
	 */
	public final ITableField<Integer> provinceId = new TableFieldImpl<Integer>(this,"province_id","provinceId","省份编号");

	/**
	 * 城市名称 | varchar(25)
	 */
	public final ITableField<String> cityName = new TableFieldImpl<String>(this,"city_name","cityName","城市名称");

	/**
	 * 描述 | varchar(25)
	 */
	public final ITableField<String> description = new TableFieldImpl<String>(this,"description","description","描述");

	private final ITableField<?>[] allFields = new ITableField<?>[] {id,provinceId,cityName,description};

	public ITableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	//主键字段
	public final ITableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	//乐观锁字段
	public final ITableField<?> getLockVersion() {
		return null;
	}

	//表city的新增，修改，删除记录是否需要留痕
	public final String getDataTrailTableName() {
		return null;
	}

	//是否是自增主键
	public final boolean isAutoGeneratedPK() {
		return true;
	}

	//是否有乐观锁
	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TCity[table=city]";
	}
}
