package org.spring.springboot.domain.tables;
import com.welab.xdao.context.table.AllField;
import com.welab.xdao.context.table.AbstractTable;
import com.welab.xdao.context.element.ITableField;
import com.welab.xdao.context.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.welab.xdao.context.element.IDateTableField;
import com.welab.xdao.context.table.DateTableFieldImpl;

public class TAreas extends AbstractTable {

	static {
		init();
	}

	private TAreas(){
		super.tableName = "areas";
	}

	private TAreas(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TAreas getInstance() {
		return new TAreas();
	}

	public static final TAreas getInstance(String aliasName) {
		return new TAreas(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("provinceCode", "province_code");
		allFieldMap.put("provinceName", "province_name");
		allFieldMap.put("cityCode", "city_code");
		allFieldMap.put("cityLevel", "city_level");
		allFieldMap.put("cityName", "city_name");
		allFieldMap.put("districtCode", "district_code");
		allFieldMap.put("districtName", "district_name");
		allFieldMap.put("createdAt", "created_at");
		allFieldMap.put("updatedAt", "updated_at");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final ITableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public ITableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | int(20)
	 */
	public final ITableField<Integer>  pk = new TableFieldImpl<Integer>(this,"id","id","主键");
	public final ITableField<Integer> id = new TableFieldImpl<Integer>(this,"id","id","主键");

	/**
	 * 省编码 | varchar(255)
	 */
	public final ITableField<String> provinceCode = new TableFieldImpl<String>(this,"province_code","provinceCode","省编码");

	/**
	 * 省名 | varchar(255)
	 */
	public final ITableField<String> provinceName = new TableFieldImpl<String>(this,"province_name","provinceName","省名");

	/**
	 * 城市编码 | varchar(255)
	 */
	public final ITableField<String> cityCode = new TableFieldImpl<String>(this,"city_code","cityCode","城市编码");

	/**
	 * 城市级别 | double
	 */
	public final ITableField<Double> cityLevel = new TableFieldImpl<Double>(this,"city_level","cityLevel","城市级别");

	/**
	 * 城市名称 | varchar(255)
	 */
	public final ITableField<String> cityName = new TableFieldImpl<String>(this,"city_name","cityName","城市名称");

	/**
	 * 区县编码 | varchar(255)
	 */
	public final ITableField<String> districtCode = new TableFieldImpl<String>(this,"district_code","districtCode","区县编码");

	/**
	 * 区县名称 | varchar(255)
	 */
	public final ITableField<String> districtName = new TableFieldImpl<String>(this,"district_name","districtName","区县名称");

	/**
	 * 创建时间 | timestamp(6)
	 */
	public final IDateTableField<Date> createdAt = new DateTableFieldImpl<Date>(this,"created_at","createdAt","创建时间");

	/**
	 * 修改时间 | timestamp(6)
	 */
	public final IDateTableField<Date> updatedAt = new DateTableFieldImpl<Date>(this,"updated_at","updatedAt","修改时间");

	private final ITableField<?>[] allFields = new ITableField<?>[] {id,provinceCode,provinceName,cityCode,cityLevel,cityName,districtCode,districtName,createdAt,updatedAt};

	public ITableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	//主键字段
	public final ITableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	//乐观锁字段
	public final ITableField<?> getLockVersion() {
		return null;
	}

	//表areas的新增，修改，删除记录是否需要留痕
	public final String getDataTrailTableName() {
		return null;
	}

	//是否是自增主键
	public final boolean isAutoGeneratedPK() {
		return false;
	}

	//是否有乐观锁
	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TAreas[table=areas]";
	}
}
